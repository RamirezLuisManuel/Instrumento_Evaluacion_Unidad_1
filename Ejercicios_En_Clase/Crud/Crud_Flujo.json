[
    {
        "id": "3b6a2dc454868611",
        "type": "tab",
        "label": "CRUD",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4b254d49b8cfdd30",
        "type": "http response",
        "z": "3b6a2dc454868611",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1050,
        "y": 260,
        "wires": []
    },
    {
        "id": "0bc467525f427bfe",
        "type": "sqlite",
        "z": "3b6a2dc454868611",
        "mydb": "e99386411f08c417",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "aiot.db",
        "x": 910,
        "y": 420,
        "wires": [
            [
                "5b1ef84deb2e759d"
            ]
        ]
    },
    {
        "id": "5b1ef84deb2e759d",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "showSaved",
        "func": "var item = {\n    id: msg.payload[0].id,\n    login: msg.payload[0].login,\n    pass: msg.payload[0].pass,\n    record_at: msg.payload[0].record_at\n}\nif (item.id == \"\" || item.login == \"\" ||\n    item.pass ==\"\" || item.record_at ==\"\"){\n    msg.statusCode=400,\n    msg.payload = null;\n    return msg;\n}\nmsg.payload = item;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 340,
        "wires": [
            [
                "4b254d49b8cfdd30"
            ]
        ]
    },
    {
        "id": "4d877b9ae225c1f3",
        "type": "http in",
        "z": "3b6a2dc454868611",
        "name": "",
        "url": "/sensors/index",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 580,
        "wires": [
            [
                "e39bb7c158c679e0"
            ]
        ]
    },
    {
        "id": "131ea1d034281a8c",
        "type": "http in",
        "z": "3b6a2dc454868611",
        "name": "",
        "url": "/sensors/insert",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 640,
        "wires": [
            [
                "c68f855066f81846"
            ]
        ]
    },
    {
        "id": "d32fac82317d2e07",
        "type": "http in",
        "z": "3b6a2dc454868611",
        "name": "",
        "url": "/sensors/update",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 700,
        "wires": [
            [
                "1423ae33291b9241"
            ]
        ]
    },
    {
        "id": "e6c046d93b552d35",
        "type": "http in",
        "z": "3b6a2dc454868611",
        "name": "",
        "url": "/sensors/delete",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 760,
        "wires": [
            [
                "e820cd1785dac147"
            ]
        ]
    },
    {
        "id": "8aaabd92458a472b",
        "type": "sqlite",
        "z": "3b6a2dc454868611",
        "mydb": "e99386411f08c417",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "aiot.db",
        "x": 510,
        "y": 580,
        "wires": [
            [
                "042fe9968842c133"
            ]
        ]
    },
    {
        "id": "e39bb7c158c679e0",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "getSensores",
        "func": "msg.topic = \"SELECT * FROM sensors;\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 580,
        "wires": [
            [
                "8aaabd92458a472b"
            ]
        ]
    },
    {
        "id": "c68f855066f81846",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "insertSensores",
        "func": "msg.topic = \"INSERT INTO sensors (name,type) VALUES('\" + msg.payload.name + \"', '\" + msg.payload.type + \"');\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 640,
        "wires": [
            [
                "2c30219cbe223239"
            ]
        ]
    },
    {
        "id": "2c30219cbe223239",
        "type": "sqlite",
        "z": "3b6a2dc454868611",
        "mydb": "e99386411f08c417",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "aiot.db",
        "x": 510,
        "y": 640,
        "wires": [
            [
                "3947581198c8637a"
            ]
        ]
    },
    {
        "id": "1423ae33291b9241",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "updateSensores",
        "func": "msg.topic = \"UPDATE sensors SET name = '\" + msg.payload.name + \"', type= '\" + msg.payload.type + \"' WHERE id =\"+msg.payload.id+\";\";\nreturn msg; ",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 700,
        "wires": [
            [
                "5450cd0e66c9b039"
            ]
        ]
    },
    {
        "id": "e820cd1785dac147",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "deleteSensores",
        "func": "msg.topic = \"DELETE FROM sensors\"+\n \"WHERE id =\"+msg.payload.id+\";\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 760,
        "wires": [
            [
                "5576c957ea9fd43c"
            ]
        ]
    },
    {
        "id": "5450cd0e66c9b039",
        "type": "sqlite",
        "z": "3b6a2dc454868611",
        "mydb": "e99386411f08c417",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "aiot.db",
        "x": 510,
        "y": 700,
        "wires": [
            [
                "e22de52f66dc79b5"
            ]
        ]
    },
    {
        "id": "5576c957ea9fd43c",
        "type": "sqlite",
        "z": "3b6a2dc454868611",
        "mydb": "e99386411f08c417",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "aiot.db",
        "x": 510,
        "y": 760,
        "wires": [
            [
                "e22de52f66dc79b5"
            ]
        ]
    },
    {
        "id": "042fe9968842c133",
        "type": "json",
        "z": "3b6a2dc454868611",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 580,
        "wires": [
            [
                "c97c700a6264404c"
            ]
        ]
    },
    {
        "id": "c97c700a6264404c",
        "type": "template",
        "z": "3b6a2dc454868611",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en-GB\">\n<head>\n<title>Sensor</title>\n<meta charset=\"utf-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" />\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-timepicker/0.5.2/css/bootstrap-timepicker.min.css\" />\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js\"></script>;\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>;\n<link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.css\" />\n<link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid-theme.min.css\" />\n<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.js\"></script >\n\n<script type=\"text/javascript\">\n$(function () {\n\nvar db = {{#payload}}{{{.}}}{{/payload}};\n\n$(\"#jsgrid\").jsGrid({\nwidth: \"100%\",\ninserting: true,\nediting: true,\nsorting: true,\npaging: true,\n\ndata: db,\n\nfields: [\n{ title:\"ID\", name: \"id\", type: \"text\", width: 50,readOnly:true },\n{ title:\"Name\", name: \"name\", type: \"text\", width: 50 },\n{ title:\"Type\", name: \"type\", type: \"text\", width: 50 },\n{ title:\"Record at\", name: \"record_at\",\n type:\"text\", width: 50, readOnly:true},\n{ type: \"control\" }\n],\n\ncontroller: {\ninsertItem: function(item) {\nreturn $.ajax({\ntype: \"POST\",\nurl: \"/sensores/insert\",\ndata: item\n});\n},\nupdateItem: function(item) {\nreturn $.ajax({\ntype: \"PUT\",\nurl: \"/sensores/update\",\ndata: item\n});\n},\ndeleteItem: function(item) {\nreturn $.ajax({\ntype: \"DELETE\",\nurl: \"/sensores/delete\",\ndata: item\n});\n}\n}\n});\n});\n\n</script>\n</head>\n<body class=\"container\">\n<section class=\"row\">\n\n<div class=\"col-md-6\"></div>\n<div class=\"col-md-6\" id=\"jsgrid\">\n</div>\n</section>\n</body>\n</html>",
        "output": "str",
        "x": 820,
        "y": 580,
        "wires": [
            [
                "a4dc7c2c19909ea9"
            ]
        ]
    },
    {
        "id": "3947581198c8637a",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "getLastSaved",
        "func": "msg.topic = \n\"SELECT * FROM sensors WHERE id =\"+ \n\"(SELECT MAX(id) FROM sensors);\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 800,
        "wires": [
            [
                "c532f0ebecb61a38"
            ]
        ]
    },
    {
        "id": "c532f0ebecb61a38",
        "type": "sqlite",
        "z": "3b6a2dc454868611",
        "mydb": "e99386411f08c417",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "aiot.db",
        "x": 870,
        "y": 760,
        "wires": [
            [
                "26d74745c190644e"
            ]
        ]
    },
    {
        "id": "26d74745c190644e",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "showSaved",
        "func": "var item = {\n    id: msg.payload[0].id,\n    name: msg.payload[0].name,\n    type: msg.payload[0].type,\n    record_at: msg.payload[0].record_at\n}\nif (item.id == \"\" || item.name == \"\" ||\n    item.type ==\"\" || item.record_at ==\"\"){\n    msg.statusCode=400,\n    msg.payload = null;\n    return msg;\n}\nmsg.payload = item;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 680,
        "wires": [
            [
                "a4dc7c2c19909ea9"
            ]
        ]
    },
    {
        "id": "e22de52f66dc79b5",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "reload",
        "func": "msg.payload = msg.result;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 700,
        "wires": [
            [
                "a4dc7c2c19909ea9"
            ]
        ]
    },
    {
        "id": "a792b6c5c7be69ee",
        "type": "http in",
        "z": "3b6a2dc454868611",
        "name": "",
        "url": "/sensordetails/index",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 880,
        "wires": [
            [
                "f7515af6d2273af3"
            ]
        ]
    },
    {
        "id": "c4bc3883ad021416",
        "type": "http in",
        "z": "3b6a2dc454868611",
        "name": "",
        "url": "/sensordetails/insert",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 940,
        "wires": [
            [
                "a8bacef5ecbe116f"
            ]
        ]
    },
    {
        "id": "3bafd057c0e6c59a",
        "type": "http in",
        "z": "3b6a2dc454868611",
        "name": "",
        "url": "/sensordetails/update",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 1000,
        "wires": [
            [
                "528f6e4b69419ffc"
            ]
        ]
    },
    {
        "id": "3c50900737f14c6e",
        "type": "http in",
        "z": "3b6a2dc454868611",
        "name": "",
        "url": "/sensordetails/delete",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1060,
        "wires": [
            [
                "736d5fa297b2a540"
            ]
        ]
    },
    {
        "id": "6bd671ace3822b16",
        "type": "sqlite",
        "z": "3b6a2dc454868611",
        "mydb": "e99386411f08c417",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "aiot.db",
        "x": 510,
        "y": 880,
        "wires": [
            [
                "f425af59a8e79f8a"
            ]
        ]
    },
    {
        "id": "f7515af6d2273af3",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "getSensor",
        "func": "msg.topic = \"SELECT * FROM sensor_details;\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 880,
        "wires": [
            [
                "6bd671ace3822b16"
            ]
        ]
    },
    {
        "id": "a8bacef5ecbe116f",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "insertSensor",
        "func": "msg.topic = \"INSERT INTO sensor_details (sensor_id, user_id, value) VALUES ('\" + msg.payload.sensor_id + \"', '\" + msg.payload.user_id + \"', '\" + msg.payload.valor + \"');\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 940,
        "wires": [
            [
                "65d9a46c83925e87"
            ]
        ]
    },
    {
        "id": "65d9a46c83925e87",
        "type": "sqlite",
        "z": "3b6a2dc454868611",
        "mydb": "e99386411f08c417",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "aiot.db",
        "x": 510,
        "y": 940,
        "wires": [
            [
                "2bdec7d2a77d4138"
            ]
        ]
    },
    {
        "id": "528f6e4b69419ffc",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "updateSensor",
        "func": "msg.topic = \"UPDATE sensor_details \" +\n            \"SET valor = '\" + msg.payload.valor + \"', \" +\n            \"sensor_id = '\" + msg.payload.sensor_id + \"', \" +\n            \"user_id = '\" + msg.payload.user_id + \"' \" +\n            \"WHERE id = '\" + msg.payload.id + \"';\";\nreturn msg; ",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1000,
        "wires": [
            [
                "de681fcb9b28695e"
            ]
        ]
    },
    {
        "id": "736d5fa297b2a540",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "deleteSensor",
        "func": "msg.topic = \"DELETE FROM sensor_details WHERE id = '\" +\n    msg.payload.id + \"';\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1060,
        "wires": [
            [
                "772820b4ddce5217"
            ]
        ]
    },
    {
        "id": "de681fcb9b28695e",
        "type": "sqlite",
        "z": "3b6a2dc454868611",
        "mydb": "e99386411f08c417",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "aiot.db",
        "x": 510,
        "y": 1000,
        "wires": [
            [
                "dc76b951bd3818d3"
            ]
        ]
    },
    {
        "id": "772820b4ddce5217",
        "type": "sqlite",
        "z": "3b6a2dc454868611",
        "mydb": "e99386411f08c417",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "aiot.db",
        "x": 510,
        "y": 1060,
        "wires": [
            [
                "dc76b951bd3818d3"
            ]
        ]
    },
    {
        "id": "f425af59a8e79f8a",
        "type": "json",
        "z": "3b6a2dc454868611",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 880,
        "wires": [
            [
                "4d5696b1441b679d"
            ]
        ]
    },
    {
        "id": "4d5696b1441b679d",
        "type": "template",
        "z": "3b6a2dc454868611",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en-GB\">\n<head>\n<title>Sensor_Details</title>\n<meta charset=\"utf-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" />\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-timepicker/0.5.2/css/bootstrap-timepicker.min.css\" />\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js\"></script>;\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>;\n<link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.css\" />\n<link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid-theme.min.css\" />\n<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.js\"></script >\n\n<script type=\"text/javascript\">\n$(function () {\n\nvar db = {{#payload}}{{{.}}}{{/payload}};\n\n$(\"#jsgrid\").jsGrid({\nwidth: \"100%\",\ninserting: true,\nediting: true,\nsorting: true,\npaging: true,\n\ndata: db,\n\nfields: [\n{ title:\"ID\", name: \"id\", type: \"text\", width: 50,readOnly:true },\n{ title:\"Sensor_id\", name: \"sensor_id\", type: \"integer\", width: 50 },\n{ title:\"User_id\", name: \"user_id\", type: \"integer\", width: 50 },\n{ title:\"Value\", name: \"value\", type: \"text\", width: 50 },\n{ title:\"Record at\", name: \"record_at\",\n type:\"text\", width: 50, readOnly:true},\n{ type: \"control\" }\n],\n\ncontroller: {\ninsertItem: function(item) {\nreturn $.ajax({\ntype: \"POST\",\nurl: \"/sensordet/insert\",\ndata: item\n});\n},\nupdateItem: function(item) {\nreturn $.ajax({\ntype: \"PUT\",\nurl: \"/sensordet/update\",\ndata: item\n});\n},\ndeleteItem: function(item) {\nreturn $.ajax({\ntype: \"DELETE\",\nurl: \"/sensordet/delete\",\ndata: item\n});\n}\n}\n});\n});\n\n</script>\n</head>\n<body class=\"container\">\n<section class=\"row\">\n\n<div class=\"col-md-6\"></div>\n<div class=\"col-md-6\" id=\"jsgrid\">\n</div>\n</section>\n</body>\n</html>",
        "output": "str",
        "x": 820,
        "y": 880,
        "wires": [
            [
                "1b80bdd463a56323"
            ]
        ]
    },
    {
        "id": "2bdec7d2a77d4138",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "getLastSaved",
        "func": "msg.topic = \n\"SELECT * FROM sensor_details WHERE id =\"+ \n\"(SELECT MAX(id) FROM sensor_details);\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1100,
        "wires": [
            [
                "4ee89b815ad6e46c"
            ]
        ]
    },
    {
        "id": "4ee89b815ad6e46c",
        "type": "sqlite",
        "z": "3b6a2dc454868611",
        "mydb": "e99386411f08c417",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "aiot.db",
        "x": 870,
        "y": 1060,
        "wires": [
            [
                "4c4486a118e5470b"
            ]
        ]
    },
    {
        "id": "4c4486a118e5470b",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "showSaved",
        "func": "var item = {\n    id: msg.payload[0].id,\n    sensor_id: msg.payload[0].sensor_id,\n    user_id: msg.payload[0].user_id,\n    value: msg.payload[0].value,\n    record_at: msg.payload[0].record_at\n}\nif (item.id == \"\" || item.name == \"\" ||\n    item.type ==\"\" || item.record_at ==\"\"){\n    msg.statusCode=400,\n    msg.payload = null;\n    return msg;\n}\nmsg.payload = item;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1000,
        "wires": [
            [
                "1b80bdd463a56323"
            ]
        ]
    },
    {
        "id": "dc76b951bd3818d3",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "reload",
        "func": "msg.payload = msg.result;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1000,
        "wires": [
            [
                "1b80bdd463a56323"
            ]
        ]
    },
    {
        "id": "e6888c6b1b9723fb",
        "type": "http in",
        "z": "3b6a2dc454868611",
        "name": "",
        "url": "/user/index",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 240,
        "wires": [
            [
                "d19d48874fcd4fc8"
            ]
        ]
    },
    {
        "id": "5e8a579e5c83fd9e",
        "type": "http in",
        "z": "3b6a2dc454868611",
        "name": "",
        "url": "/user/insert",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 300,
        "wires": [
            [
                "8513e7295079a550"
            ]
        ]
    },
    {
        "id": "8c6cb742c0ad6d58",
        "type": "http in",
        "z": "3b6a2dc454868611",
        "name": "",
        "url": "/user/update",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 360,
        "wires": [
            [
                "1df792bc7384b47f"
            ]
        ]
    },
    {
        "id": "d268840988aaeb76",
        "type": "http in",
        "z": "3b6a2dc454868611",
        "name": "",
        "url": "/user/delete",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 420,
        "wires": [
            [
                "a06f6760c656f8a8"
            ]
        ]
    },
    {
        "id": "03a1ed159679f82a",
        "type": "sqlite",
        "z": "3b6a2dc454868611",
        "mydb": "e99386411f08c417",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "aiot.db",
        "x": 550,
        "y": 240,
        "wires": [
            [
                "9a0176d89711710c"
            ]
        ]
    },
    {
        "id": "d19d48874fcd4fc8",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "getUsers",
        "func": "msg.topic = \"SELECT * FROM user;\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 240,
        "wires": [
            [
                "03a1ed159679f82a"
            ]
        ]
    },
    {
        "id": "8513e7295079a550",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "insertUsers",
        "func": "msg.topic = \"INSERT INTO user (login, pass) VALUES('\" + msg.payload.login + \"', '\" + msg.payload.pass + \"');\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 300,
        "wires": [
            [
                "61b5e4aaabf7040b"
            ]
        ]
    },
    {
        "id": "61b5e4aaabf7040b",
        "type": "sqlite",
        "z": "3b6a2dc454868611",
        "mydb": "e99386411f08c417",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "aiot.db",
        "x": 550,
        "y": 300,
        "wires": [
            [
                "161f120f1fe257ca"
            ]
        ]
    },
    {
        "id": "1df792bc7384b47f",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "updateUsers",
        "func": "msg.topic = \"UPDATE user SET login = '\" + msg.payload.login + \"', pass= '\" + msg.payload.pass + \"' WHERE id =\"+msg.payload.id+\";\";\nreturn msg; ",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 360,
        "wires": [
            [
                "3fa693c84dd654c7"
            ]
        ]
    },
    {
        "id": "a06f6760c656f8a8",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "deleteUser",
        "func": "msg.topic = \"DELETE FROM user \"+\n \"WHERE id =\"+msg.payload.id+\";\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 420,
        "wires": [
            [
                "3639b2c0598f7123"
            ]
        ]
    },
    {
        "id": "3fa693c84dd654c7",
        "type": "sqlite",
        "z": "3b6a2dc454868611",
        "mydb": "e99386411f08c417",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "aiot.db",
        "x": 550,
        "y": 360,
        "wires": [
            [
                "8edb69b32a08bac4"
            ]
        ]
    },
    {
        "id": "3639b2c0598f7123",
        "type": "sqlite",
        "z": "3b6a2dc454868611",
        "mydb": "e99386411f08c417",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "aiot.db",
        "x": 550,
        "y": 420,
        "wires": [
            [
                "8edb69b32a08bac4"
            ]
        ]
    },
    {
        "id": "9a0176d89711710c",
        "type": "json",
        "z": "3b6a2dc454868611",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 730,
        "y": 240,
        "wires": [
            [
                "311a7413a5c4ca38"
            ]
        ]
    },
    {
        "id": "311a7413a5c4ca38",
        "type": "template",
        "z": "3b6a2dc454868611",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en-GB\">\n<head>\n<title>Users</title>\n<meta charset=\"utf-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" />\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-timepicker/0.5.2/css/bootstrap-timepicker.min.css\" />\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js\"></script>;\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>;\n<link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.css\" />\n<link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid-theme.min.css\" />\n<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.js\"></script >\n\n<script type=\"text/javascript\">\n$(function () {\n\nvar db = {{#payload}}{{{.}}}{{/payload}};\n\n$(\"#jsgrid\").jsGrid({\nwidth: \"100%\",\ninserting: true,\nediting: true,\nsorting: true,\npaging: true,\n\ndata: db,\n\nfields: [\n{ title:\"ID\", name: \"id\", type: \"text\", width: 50,readOnly:true },\n{ title:\"Login\", name: \"login\", type: \"text\", width: 50 },\n{ title:\"Pass\", name: \"pass\", type: \"text\", width: 50 },\n{ title:\"Record at\", name: \"record_at\",\n type:\"text\", width: 50, readOnly:true},\n{ type: \"control\" }\n],\n\ncontroller: {\ninsertItem: function(item) {\nreturn $.ajax({\ntype: \"POST\",\nurl: \"/user/insert\",\ndata: item\n});\n},\nupdateItem: function(item) {\nreturn $.ajax({\ntype: \"PUT\",\nurl: \"/user/update\",\ndata: item\n});\n},\ndeleteItem: function(item) {\nreturn $.ajax({\ntype: \"DELETE\",\nurl: \"/user/delete\",\ndata: item\n});\n}\n}\n});\n});\n\n</script>\n</head>\n<body class=\"container\">\n<section class=\"row\">\n\n<div class=\"col-md-6\"></div>\n<div class=\"col-md-6\" id=\"jsgrid\">\n</div>\n</section>\n</body>\n</html>",
        "output": "str",
        "x": 860,
        "y": 240,
        "wires": [
            [
                "4b254d49b8cfdd30"
            ]
        ]
    },
    {
        "id": "161f120f1fe257ca",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "getLastSaved",
        "func": "msg.topic = \n\"SELECT * FROM user WHERE id =\"+ \n\"(SELECT MAX(id) FROM users);\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 460,
        "wires": [
            [
                "0bc467525f427bfe"
            ]
        ]
    },
    {
        "id": "8edb69b32a08bac4",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "reload",
        "func": "msg.payload = msg.result;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 360,
        "wires": [
            [
                "4b254d49b8cfdd30"
            ]
        ]
    },
    {
        "id": "a4dc7c2c19909ea9",
        "type": "http response",
        "z": "3b6a2dc454868611",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 990,
        "y": 620,
        "wires": []
    },
    {
        "id": "1b80bdd463a56323",
        "type": "http response",
        "z": "3b6a2dc454868611",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1030,
        "y": 920,
        "wires": []
    },
    {
        "id": "fe7e1553b3cf649b",
        "type": "http in",
        "z": "3b6a2dc454868611",
        "name": "",
        "url": "/actuators/index",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 1220,
        "wires": [
            [
                "4ee5275705122955"
            ]
        ]
    },
    {
        "id": "bb944c7c01c29375",
        "type": "http in",
        "z": "3b6a2dc454868611",
        "name": "",
        "url": "/actuators/insert",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1280,
        "wires": [
            [
                "437501baa5c108cf"
            ]
        ]
    },
    {
        "id": "7a8f7b25b35f0b63",
        "type": "http in",
        "z": "3b6a2dc454868611",
        "name": "",
        "url": "/actuators/update",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 1340,
        "wires": [
            [
                "688490c05356af9a"
            ]
        ]
    },
    {
        "id": "6c3cda539a6ae346",
        "type": "sqlite",
        "z": "3b6a2dc454868611",
        "mydb": "e99386411f08c417",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "aiot.db",
        "x": 490,
        "y": 1220,
        "wires": [
            [
                "f5460999ef487630"
            ]
        ]
    },
    {
        "id": "4ee5275705122955",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "getActuators",
        "func": "msg.topic = \"SELECT * FROM actuators;\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1220,
        "wires": [
            [
                "6c3cda539a6ae346"
            ]
        ]
    },
    {
        "id": "437501baa5c108cf",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "insertActuators",
        "func": "msg.topic = \"INSERT INTO actuators (name, type) VALUES ('\" + \n    msg.payload.name + \"', '\" + \n    msg.payload.type + \"');\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1280,
        "wires": [
            [
                "a718066c85658cc4"
            ]
        ]
    },
    {
        "id": "a718066c85658cc4",
        "type": "sqlite",
        "z": "3b6a2dc454868611",
        "mydb": "e99386411f08c417",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "aiot.db",
        "x": 490,
        "y": 1280,
        "wires": [
            [
                "5fedbee87fba0b97"
            ]
        ]
    },
    {
        "id": "688490c05356af9a",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "updateActuators",
        "func": "msg.topic = \"UPDATE actuators SET name = '\" + \n    msg.payload.name + \"', type = '\" + \n    msg.payload.type + \"' WHERE id = '\" + \n    msg.payload.id + \"';\";\n\nreturn msg; ",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1340,
        "wires": [
            [
                "6c8ac370a0c371ec"
            ]
        ]
    },
    {
        "id": "b2c65cc989c94b1c",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "deleteSensor",
        "func": "msg.topic = \"DELETE FROM actuators WHERE id = '\" + \n    msg.payload.id + \"';\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1400,
        "wires": [
            [
                "393bc8c5d8ef4afc"
            ]
        ]
    },
    {
        "id": "6c8ac370a0c371ec",
        "type": "sqlite",
        "z": "3b6a2dc454868611",
        "mydb": "e99386411f08c417",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "aiot.db",
        "x": 490,
        "y": 1340,
        "wires": [
            [
                "c3d84c91491f7c11"
            ]
        ]
    },
    {
        "id": "393bc8c5d8ef4afc",
        "type": "sqlite",
        "z": "3b6a2dc454868611",
        "mydb": "e99386411f08c417",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "aiot.db",
        "x": 490,
        "y": 1400,
        "wires": [
            [
                "c3d84c91491f7c11"
            ]
        ]
    },
    {
        "id": "f5460999ef487630",
        "type": "json",
        "z": "3b6a2dc454868611",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 670,
        "y": 1220,
        "wires": [
            [
                "420fe8e314d3f301"
            ]
        ]
    },
    {
        "id": "420fe8e314d3f301",
        "type": "template",
        "z": "3b6a2dc454868611",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en-GB\">\n<head>\n    <title>Actuators</title>\n    <meta charset=\"utf-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" />\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-timepicker/0.5.2/css/bootstrap-timepicker.min.css\" />\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js\"></script>;\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>;\n<link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.css\" />\n<link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid-theme.min.css\" />\n<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.js\"></script >\n<script type=\"text/javascript\">\n        $(function () {\n            var db = {{#payload}}{{{.}}}{{/payload}};\n            $(\"#jsgrid\").jsGrid({\n                width: \"100%\",\n                inserting: true,\n                editing: true,\n                sorting: true,\n                paging: true,\n                data: db,\n                fields: [\n                    { title: \"ID\", name: \"id\", type: \"text\", width: 50, readOnly: true },\n                    { title: \"Name\", name: \"name\", type: \"text\", width: 100 },\n                    { title: \"Type\", name: \"type\", type: \"text\", width: 100 },\n                    { title: \"Record at\", name: \"record_at\", type: \"text\", width: 100, readOnly: true },\n                    { type: \"control\" }\n                ],\n                controller: {\n                    insertItem: function(item) {\n                        return $.ajax({\n                            type: \"POST\",\n                            url: \"/actuators/insert\",\n                            data: item\n                        });\n                    },\n                    updateItem: function(item) {\n                        return $.ajax({\n                            type: \"PUT\",\n                            url: \"/actuators/update\",\n                            data: item\n                        });\n                    },\n                    deleteItem: function(item) {\n                        return $.ajax({\n                            type: \"DELETE\",\n                            url: \"/actuators/delete\",\n                            data: item\n                        });\n                    }\n                }\n            });\n        });\n    </script>\n</head>\n<body class=\"container\">\n    <div id=\"jsgrid\"></div>\n</body>\n</html>\n",
        "output": "str",
        "x": 800,
        "y": 1220,
        "wires": [
            [
                "a3c0ef0536d49a5a"
            ]
        ]
    },
    {
        "id": "5fedbee87fba0b97",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "getLastSaved",
        "func": "msg.topic = \n\"SELECT * FROM actuators WHERE id =\"+ \n\"(SELECT MAX(id) FROM actuators);\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1440,
        "wires": [
            [
                "bef1b17c1617b8a2"
            ]
        ]
    },
    {
        "id": "bef1b17c1617b8a2",
        "type": "sqlite",
        "z": "3b6a2dc454868611",
        "mydb": "e99386411f08c417",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "aiot.db",
        "x": 850,
        "y": 1400,
        "wires": [
            [
                "beedd1e48aad3e46"
            ]
        ]
    },
    {
        "id": "beedd1e48aad3e46",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "showSaved",
        "func": "var item = {\n    id: msg.payload[0].id,\n    name: msg.payload[0].name,\n    type: msg.payload[0].type,\n    record_at: msg.payload[0].record_at\n};\n\nif (!item.id || !item.name || !item.type || !item.record_at) {\n    msg.statusCode = 400;\n    msg.payload = null;\n    return msg;\n}\nmsg.payload = item;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 1340,
        "wires": [
            [
                "a3c0ef0536d49a5a"
            ]
        ]
    },
    {
        "id": "c3d84c91491f7c11",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "reload",
        "func": "msg.payload = msg.result;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1340,
        "wires": [
            [
                "a3c0ef0536d49a5a"
            ]
        ]
    },
    {
        "id": "a3c0ef0536d49a5a",
        "type": "http response",
        "z": "3b6a2dc454868611",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1010,
        "y": 1260,
        "wires": []
    },
    {
        "id": "bf1f26a4c6880d3b",
        "type": "http in",
        "z": "3b6a2dc454868611",
        "name": "",
        "url": "/actuatorsdetalles/index",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1520,
        "wires": [
            [
                "df25381bbf4e30b5"
            ]
        ]
    },
    {
        "id": "284a11e57bd836d5",
        "type": "http in",
        "z": "3b6a2dc454868611",
        "name": "",
        "url": "/actuatorsdetalles/insert",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 1580,
        "wires": [
            [
                "5fecaa7816ed8428"
            ]
        ]
    },
    {
        "id": "b8984d9f5e1f0cc5",
        "type": "http in",
        "z": "3b6a2dc454868611",
        "name": "",
        "url": "/actuatorsdetalles/update",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 1640,
        "wires": [
            [
                "784f4da1b3f81d17"
            ]
        ]
    },
    {
        "id": "d2e2481465ef4550",
        "type": "sqlite",
        "z": "3b6a2dc454868611",
        "mydb": "e99386411f08c417",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "aiot.db",
        "x": 550,
        "y": 1520,
        "wires": [
            [
                "43597981bc33f82a"
            ]
        ]
    },
    {
        "id": "df25381bbf4e30b5",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "getActuatordet",
        "func": "msg.topic = \"SELECT * FROM actuators_details;\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1520,
        "wires": [
            [
                "d2e2481465ef4550"
            ]
        ]
    },
    {
        "id": "5fecaa7816ed8428",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "insertActuatordet",
        "func": "msg.topic = \"INSERT INTO actuators_details (actuator_id, user_id, state) VALUES ('\" +\n    msg.payload.actuator_id + \"', '\" +\n    msg.payload.user_id + \"', '\" +\n    msg.payload.state + \"');\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1580,
        "wires": [
            [
                "3d621c652dfd0e12"
            ]
        ]
    },
    {
        "id": "3d621c652dfd0e12",
        "type": "sqlite",
        "z": "3b6a2dc454868611",
        "mydb": "e99386411f08c417",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "aiot.db",
        "x": 550,
        "y": 1580,
        "wires": [
            [
                "284eb4565e7625b5"
            ]
        ]
    },
    {
        "id": "784f4da1b3f81d17",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "updateActuatordet",
        "func": "msg.topic = \"UPDATE actuators_details SET actuator_id = '\" + \n    msg.payload.actuator_id + \"', user_id = '\" + \n    msg.payload.user_id + \"', state = '\" + \n    msg.payload.state + \"' WHERE id = '\" + \n    msg.payload.id + \"';\";\nreturn msg; ",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1640,
        "wires": [
            [
                "564f268a23cfdc1a"
            ]
        ]
    },
    {
        "id": "6088f54f023e1e0c",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "deleteActuatordet",
        "func": "msg.topic = \"DELETE FROM actuators_details WHERE id = '\" + \n    msg.payload.id + \"';\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1700,
        "wires": [
            [
                "874e355f068e9e54"
            ]
        ]
    },
    {
        "id": "564f268a23cfdc1a",
        "type": "sqlite",
        "z": "3b6a2dc454868611",
        "mydb": "e99386411f08c417",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "aiot.db",
        "x": 550,
        "y": 1640,
        "wires": [
            [
                "798b06a230cdb353"
            ]
        ]
    },
    {
        "id": "874e355f068e9e54",
        "type": "sqlite",
        "z": "3b6a2dc454868611",
        "mydb": "e99386411f08c417",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "aiot.db",
        "x": 570,
        "y": 1700,
        "wires": [
            [
                "798b06a230cdb353"
            ]
        ]
    },
    {
        "id": "43597981bc33f82a",
        "type": "json",
        "z": "3b6a2dc454868611",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 730,
        "y": 1520,
        "wires": [
            [
                "8b3f79db1ebfa9bc"
            ]
        ]
    },
    {
        "id": "8b3f79db1ebfa9bc",
        "type": "template",
        "z": "3b6a2dc454868611",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en-GB\">\n<head>\n<title>Sensor_Details</title>\n<meta charset=\"utf-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" />\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-timepicker/0.5.2/css/bootstrap-timepicker.min.css\" />\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js\"></script>;\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>;\n<link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.css\" />\n<link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid-theme.min.css\" />\n<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.js\"></script >\n\n<script type=\"text/javascript\">\n    $(function () {\n        var db = {{#payload}}{{{.}}}{{/payload}};\n        $(\"#jsgrid\").jsGrid({\n            width: \"100%\",\n            inserting: true,\n            editing: true,\n            sorting: true,\n            paging: true,\n            data: db,\n            fields: [\n                { title: \"ID\", name: \"id\", type: \"text\", width: 50, readOnly: true },\n                { title: \"Actuator ID\", name: \"actuator_id\", type: \"integer\", width: 100 },\n                { title: \"User ID\", name: \"user_id\", type: \"integer\", width: 100 },\n                { title: \"State\", name: \"state\", type: \"text\", width: 100 },\n                { title: \"Record at\", name: \"record_at\", type: \"text\", width: 100, readOnly: true },\n                { type: \"control\" }\n            ],\n            controller: {\n                insertItem: function(item) {\n                    return $.ajax({\n                        type: \"POST\",\n                        url: \"/actuatordet/insert\",\n                        data: item\n                    });\n                },\n                updateItem: function(item) {\n                    return $.ajax({\n                        type: \"PUT\",\n                        url: \"/actuatordet/update\",\n                        data: item\n                    });\n                },\n                deleteItem: function(item) {\n                    return $.ajax({\n                        type: \"DELETE\",\n                        url: \"/actuatordet/delete\",\n                        data: item\n                    });\n                }\n            }\n        });\n    });\n</script>\n</head>\n<body class=\"container\">\n<section class=\"row\">\n\n<div class=\"col-md-6\"></div>\n<div class=\"col-md-6\" id=\"jsgrid\">\n</div>\n</section>\n</body>\n</html>",
        "output": "str",
        "x": 860,
        "y": 1520,
        "wires": [
            [
                "ad123ded5aa22674"
            ]
        ]
    },
    {
        "id": "284eb4565e7625b5",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "getLastSaved",
        "func": "msg.topic = \n\"SELECT * FROM actuators_details WHERE id =\"+ \n\"(SELECT MAX(id) FROM actuator_details);\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1740,
        "wires": [
            [
                "fccb9ac0b6a831a2"
            ]
        ]
    },
    {
        "id": "fccb9ac0b6a831a2",
        "type": "sqlite",
        "z": "3b6a2dc454868611",
        "mydb": "e99386411f08c417",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "aiot.db",
        "x": 910,
        "y": 1700,
        "wires": [
            [
                "72c7747db8eee1d6"
            ]
        ]
    },
    {
        "id": "72c7747db8eee1d6",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "showSaved",
        "func": "var item = {\n    id: msg.payload[0].id,\n    actuator_id: msg.payload[0].actuator_id,\n    user_id: msg.payload[0].user_id,\n    state: msg.payload[0].state,\n    record_at: msg.payload[0].record_at\n};\n\nif (!item.id || !item.actuator_id || !item.user_id || !item.state || !item.record_at) {\n    msg.statusCode = 400;\n    msg.payload = null;\n    return msg;\n}\nmsg.payload = item;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1640,
        "wires": [
            [
                "ad123ded5aa22674"
            ]
        ]
    },
    {
        "id": "798b06a230cdb353",
        "type": "function",
        "z": "3b6a2dc454868611",
        "name": "reload",
        "func": "msg.payload = msg.result;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1640,
        "wires": [
            [
                "ad123ded5aa22674"
            ]
        ]
    },
    {
        "id": "ad123ded5aa22674",
        "type": "http response",
        "z": "3b6a2dc454868611",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1070,
        "y": 1560,
        "wires": []
    },
    {
        "id": "0420e565a52f44f4",
        "type": "http in",
        "z": "3b6a2dc454868611",
        "name": "",
        "url": "/actuators/delete",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1400,
        "wires": [
            [
                "b2c65cc989c94b1c"
            ]
        ]
    },
    {
        "id": "3d7322c2ba837749",
        "type": "http in",
        "z": "3b6a2dc454868611",
        "name": "",
        "url": "/actuatorsdetalles/delete",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1700,
        "wires": [
            [
                "6088f54f023e1e0c"
            ]
        ]
    },
    {
        "id": "e99386411f08c417",
        "type": "sqlitedb",
        "db": "\\Users\\Luis Manuel\\aiot.db",
        "mode": "RWC"
    }
]
